# only build pull requests and merges to master or dev
# adapted from https://stackoverflow.com/a/31882307
if: (type = push AND branch IN (master, dev)) OR (type = pull_request AND NOT branch =~ /no-ci/)
dist: xenial
group: edge
arch: arm64-graviton2
sudo: required
services:
- docker
jobs:
  include:
  - stage: Docker Build
    script:
    - docker build -t "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" .
    - docker ps -a
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}"

  - stage: Tests

    name: OpenMPI uitsl and external Unit Tests (debug mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uitsl && make test && cd /opt/conduit/tests/external && make test"

  - name: OpenMPI uit Unit Tests (debug mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uit && make test"

  - name: OpenMPI netuit Unit Tests (debug mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/netuit && make test"


  - name: MPICH uitsl and external Unit Tests (debug mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uitsl && make test && cd /opt/conduit/tests/external && make test"

  - name: MPICH uit Unit Tests (debug mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uit && make test"

  - name: MPICH netuit Unit Tests (debug mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/netuit && make test"

  - name: OpenMPI uitsl and external Unit Tests (fulldebug mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uitsl && make fulldebug && cd /opt/conduit/tests/external && make fulldebug"

  - name: OpenMPI uit Unit Tests (fulldebug mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uit && make fulldebug"

  - name: OpenMPI netuit Unit Tests (fulldebug mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/netuit && make fulldebug"


  - name: MPICH uitsl Unit Debug Tests (fulldebug mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uitsl && make fulldebug && cd /opt/conduit/tests/external && make fulldebug"

  - name: MPICH uit Unit Debug Tests (fulldebug mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uit && make fulldebug"

  - name: MPICH netuit Unit Debug Tests (fulldebug mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/netuit && make fulldebug"


  - name: OpenMPI uitsl and external Unit Tests (opt mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uitsl && make opt && cd /opt/conduit/tests/external && make opt"

  - name: OpenMPI uit Unit Tests (opt mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uit && make opt"

  - name: OpenMPI netuit Unit Tests (opt mode)
    env: UIT_MPICXX=mpicxx.openmpi UIT_MPIEXEC=mpiexec.openmpi
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/netuit && make opt"


  - name: MPICH uitsl Unit Debug Tests (opt mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uitsl && make opt && cd /opt/conduit/tests/external && make opt"

  - name: MPICH uit Unit Debug Tests (opt mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uit && make opt"

  - name: MPICH netuit Unit Debug Tests (opt mode)
    env: UIT_MPICXX=mpicxx.mpich UIT_MPIEXEC=mpiexec.mpich
    script:
    - docker run -e TRAVIS -e UIT_MPICXX -e UIT_MPIEXEC "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/netuit && make opt"


  - name: uitsl and external Coverage
    script: docker run "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uitsl && make cov && cd /opt/conduit/tests/external && make cov && bash <(curl -s https://codecov.io/bash)"

  - name: uit Coverage
    script: docker run "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/uit && make cov && bash <(curl -s https://codecov.io/bash)"

  - name: netuit Coverage
    script: docker run "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit/tests/netuit && make cov && bash <(curl -s https://codecov.io/bash)"


  - name: Macrobenchmarks
    script: docker run "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit && make macrobenchmark"

  - name: Microbenchmarks
    script: docker run -e OSF_PASSWORD -e CONTEXT=travis "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit && make microbenchmark"

  - name: Source
    script: docker run --cap-add=SYS_ADMIN "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit && source third-party/emsdk/emsdk_env.sh && make test-source"

  - name: Docs, Demos, Miscellaneous
    script: docker run "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/conduit && ./ci/test_trailing_whitespace.sh && ./ci/test_tabs.sh && ./ci/test_missing_newlines.sh && make docs && make demos && ./ci/test_headerguards.sh && ./ci/test_alphabetize_includes.sh && make test-readme-snippets"

  - stage: Deploy
    name: GitHub Pages
    if: (type = push AND branch IN (master))
    script:
    - docker run -e GH_TOKEN -e TRAVIS_BUILD_NUMBER -e OSF_PASSWORD mmore500/conduit /bin/bash -c "cd /opt/conduit && source third-party/emsdk/emsdk_env.sh && make web && ./ci/deploy_gh_pages.sh"
  - name: DockerHub
    if: (type = push AND branch IN (master))
    script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker pull "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}"
    - docker tag "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" "mmore500/conduit:latest"
    - docker push "mmore500/conduit:latest"
env:
  global:
  - secure: oZPMB8k0E1/nnJ1LqPBqGu8XKRWnvC3TzWa/CBryfJetmK8iNXng7lTFZpaCGBfpPM+Zyota7E0VGT9GE2MZznb9NrSPqSRgvwGqySSS31mFGcA5vPMQVfL1vA2mswpdTCZjGGZ86KCbb14IapxnsQ44TZNvmsA2jX5PrK4hrysJYVcS4KPNicQ0X2EwSq2hTugbtzCn2bd9H971joabO19YdVl6LaBhkhvFVRR/rbD+FSNx6EkfR1DKMpA7LGCrNw+sUKBjul4Xc8jb9Wjhc2nbRpbMIx/qJFwdoBjXzqGPY6FpdFyrkX/dnn3d3OrZcEuckRa02tyAepXEQm8jWeBUgwNu6arZm9GpA58O06Tk/i605XCSn4IhCe90ssPZu6xubp45Tmduthla8AJOM0rfSOcv0/3twsE5fPC1mGsB/kocZcOokLldZzh98AtO90KTaNNFjFfD5B7h1W4EOcIh2y8/Po8lnJISLT9DzuZCdIXRIs+MjXm+bkV8r7td6WNntjVoZzCuR5q/iWr6YTp/SjGYaMJNBvLEBgdxg4tCM3VUNcLAiIqO8LsxGEUZOur1uSOIbJ//idzUVk0+gr6tlPnwh7ZwP+vVGnfOuV1bMK7cslgs4Keo4BYUDdbKYH7rhIcMZHKf0aWmK4cGV/OIDp6SAXW0vtOAEcokg0Q=
  - secure: vnthCFzfA+jtExEdiEk1/aRmkanVBQsvrD6EwEcZ0djiBHx/c6QtUA3aIRazlJrTxSfcPKdH5LwPaJfXXhNoFlaWTwjMGHjcYZwYnNYqIqrx0qqqn1Q8UuGffKuAGdFv4jG8puSqLw/GWcZDCSplYCZ+dvjD8W4u+WcvckqE8pdDYXoMzr13lJXfu0Cr+kNz/SZxldgT6eq369HxUHrW9h4Di7p5Vi/Gr6QgWd9tGgMsgq0H5558hd8gIMJxfxRA67ZWxc2YqzbLl5xbI2Oz9rJFWkqe8/fYp0KJT1ghJXSsyVHs6LdXLead9tgqbocuZr9qtkwAJiyYR6p8p3d2tz5wqZ9/hpfTYlTSJ2Ro6Dp1yZSTNJN3DFxmVRPTx5WGtWwMUc69JcW3GFRm1QxECZMv93qpsLPGcnGAkT2kH6xIyI67d66m8MVe0htnpWEUF1oGq3qZLRXjKt2QT9aRa641wrfaJThqht4FTnl7TLawJDv/UhfnFM+a/AkL1+1uyPaAhFnci5nGCY5WlYWpxGYXeWk6SABRh09NuLmritRTPYC/wwKD42+B4EzC/fWGKSVfUHGUgjyNvJj5H6n2eV4a9YBj052U/1UJoMxpDu7sP/GqN4Ttrm9aJFumCSVFrkO/7x+U3necF1mKjnIc/v+uyk8TkCcRZrGvqvaogx8=
  - secure: u3kEn0mdqhk8b9VT8sT4wvuf0LdgROlrYhATGa7eSh61cStT8tClm/98/LzO5xIl//rxY5OBUTew3SP20IBtRm+fwxuTotPTr73ZlAb4FgfNwIqTPXGeanchvxufq4iBuVT4xEqlY+un3nE9oiq00IsnNafW/07pziuT2QbbX5DPMoqvE9zHaYX0cjLzLOQUIPjWQcEbKU9vhs1ulgWJ/OK9xnMemXRPEmdhxhr6EVUnc0VGbcIm/GmmOdiar8dCW1Djj3anSC9KpMUGOQat50n9TnySEOsQTX7fYEiUytQjha8QfSw+qM8g2StZAs1foLZLPHEUtolF0lBdaKNbdKV4ZSk51jTPOgLY8hdD36TQi9lcykE4dYnhcs82YqIhi1D97Y5JiIhTOcZaXv4Gc5YxvLAcwK2swc4FDk/3UyBAHeKnWGzz0OSeNzKk2ZChaHLpQJd6S/AdR4ARjkwRFCnhXCdnJzSMMrGylHrnU4PU/5eNYz4SKSgSNIiWk+XZaTaSoiCJ6YKMzaqi/ftepnJDA9i2cnOTR2tzCrKDVnU+8uqKPtBH8eM6yeVCXl+nfQdgVnPJ6You8CAg/Tt6+rcT+CLikLhmAfB2ytPrZjRaoVgnV/ZhgesUEmi7Bg+HajrnpbrVs9/2b0hxqHjVcs8IBq5vHHCWwiRNArkO8DA=
  - secure: fcHvzSvdt+6lIVNJY4hYtMuf94XCDKb6mdoXKd2it2RiiFNwDLsjVfhZ4V3t8TC750kqVBmoT0tWtqK+wMVXHOfUEFRXdjFaVm1opFJwnkaZ4rDSHzJR+hC8QkfdNlVqgrNjrFwV0cPG22qQJHT+rzKOatkxCP1Zt7hQaCmAdY6Fdjo6mNU311SaHrsCLsZ3gL3qkC56PBAr5LDwik7W+9rQ1FS7ZVOZfPZD9UnU36ZsMpYbVY//ByuSz2QVDk+mECeHg13r+q808g2TDUd8TLu5lLwHQBQ8skY6MNFSBZE2H0QRO0xOrK+eg3NGcmB2xQIc5B2JapQVTgV0WSBycePDtvYFRwwLenzAu+nIoTP8WOVLK3nHB9e9dMRKHy4AOeqUB369ZJUfOqp2w6UjSuJ58uOEQj6lStAvJn7j0frJ2FMVwSA82RdOkBwjNKAoffCZpB+nfjwnpkkSC941hLLZYV+DzbBT1A6IDFIzmg9rcfrsYkGs0E73+QlRvKsaW9hCv9hzavombZ4da8YFFtaHImDyKwEPoISMsSpSOAsa0ocQpE7jpVpy4pOx3j4XQbyNAt5ATnCxO5muDFr/f1mcmSF+5R9YwPA1hAjICEtSam3q3pJRx+IETvj+nem6j7bmUbmePCyqRKB70xeIdkY8RmKdx48b9nGvl3GJgfQ=
